openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: 'POST api/login'
      description: "This endpoint is used by all types of users to be authenticated.\nIn the response, there will be a token that you need to use in every request that you make to the server.\n\n<aside class=\"notice\">Use the token in every request that you make in order to be authorized to access resources.</aside>"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"4|va23TB3m66Pr1W7ozSfDuRWMsHnf6fhwexyTY1Wg\"\n}"
        422:
          description: 'user not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'These credentials do not match out records.'
                properties:
                  message:
                    type: string
                    example: 'These credentials do not match out records.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: example@gmail.com
                password:
                  type: string
                  description: 'Password of the user.'
                  example: password
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'POST api/logout'
      description: 'This endpoint will log out the user and destroy the token that is used.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/garage/register:
    post:
      summary: 'POST api/garage/register'
      description: "This endpoint will first create a user and then assign the garage to that user.\nYou need to pass the client credentials and the garage in the same request."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user_id: 15
                  name: ut
                  address: placeat
                  email: hic@gmail.com
                  phone_number: '+3125544785'
                  id: 6
                properties:
                  user_id:
                    type: integer
                    example: 15
                  name:
                    type: string
                    example: ut
                  address:
                    type: string
                    example: placeat
                  email:
                    type: string
                    example: hic@gmail.com
                  phone_number:
                    type: string
                    example: '+3125544785'
                  id:
                    type: integer
                    example: 6
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name:
                    - 'The first name field is required.'
                  last_name:
                    - 'The last name field is required.'
                  email:
                    - 'The email field is required.'
                  date_of_birth:
                    - 'The date of birth field is required.'
                  address:
                    - 'The address field is required.'
                  phone_number:
                    - 'The phone number field is required.'
                  garage_email:
                    - 'The garage_email of garage field is required.'
                  garage_address:
                    - 'The garage_address of garage field is required.'
                  name:
                    - 'The name of garage field is required.'
                  garage_phone_number:
                    - 'The garage_phone_number of garage field is required.'
                properties:
                  first_name:
                    type: array
                    example:
                      - 'The first name field is required.'
                    items:
                      type: string
                  last_name:
                    type: array
                    example:
                      - 'The last name field is required.'
                    items:
                      type: string
                  email:
                    type: array
                    example:
                      - 'The email field is required.'
                    items:
                      type: string
                  date_of_birth:
                    type: array
                    example:
                      - 'The date of birth field is required.'
                    items:
                      type: string
                  address:
                    type: array
                    example:
                      - 'The address field is required.'
                    items:
                      type: string
                  phone_number:
                    type: array
                    example:
                      - 'The phone number field is required.'
                    items:
                      type: string
                  garage_email:
                    type: array
                    example:
                      - 'The garage_email of garage field is required.'
                    items:
                      type: string
                  garage_address:
                    type: array
                    example:
                      - 'The garage_address of garage field is required.'
                    items:
                      type: string
                  name:
                    type: array
                    example:
                      - 'The name of garage field is required.'
                    items:
                      type: string
                  garage_phone_number:
                    type: array
                    example:
                      - 'The garage_phone_number of garage field is required.'
                    items:
                      type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: Luuk
                last_name:
                  type: string
                  description: ''
                  example: 'van der Steen'
                date_of_birth:
                  type: string
                  description: ''
                  example: '2001-02-06'
                address:
                  type: string
                  description: ''
                  example: 'Juan Leon Mera, 19, Av. Patria'
                email:
                  type: string
                  description: ''
                  example: quam
                phone_number:
                  type: string
                  description: ''
                  example: '+5514123456'
                name:
                  type: string
                  description: 'Name of the garage.'
                  example: minima
                garage_address:
                  type: string
                  description: 'Address of the garage.'
                  example: quas
                garage_email:
                  type: string
                  description: 'Email of the garage.'
                  example: molestiae
                garage_phone_number:
                  type: string
                  description: 'Phone number of the garage.'
                  example: harum
              required:
                - first_name
                - last_name
                - date_of_birth
                - address
                - email
                - phone_number
                - name
                - garage_address
                - garage_email
                - garage_phone_number
      security: []
  /api/authenticated:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: 'GET api/user'
      description: 'Returns the data for the user that is authenticated.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 11
                  first_name: Dave
                  last_name: 'van der Kaay'
                  email: amin.tahiri@ismail.nl
                  date_of_birth: '2021-12-18'
                  address: "Koçdreef 5-7\n3551GH Tilburg"
                  phone_number: '+298159732'
                  role: garage_administration
                properties:
                  id:
                    type: integer
                    example: 11
                  first_name:
                    type: string
                    example: Dave
                  last_name:
                    type: string
                    example: 'van der Kaay'
                  email:
                    type: string
                    example: amin.tahiri@ismail.nl
                  date_of_birth:
                    type: string
                    example: '2021-12-18'
                  address:
                    type: string
                    example: "Koçdreef 5-7\n3551GH Tilburg"
                  phone_number:
                    type: string
                    example: '+298159732'
                  role:
                    type: string
                    example: garage_administration
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/users:
    get:
      summary: 'GET api/users'
      description: 'Returns all the clients.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      first_name: Vajèn
                      last_name: Joosten
                      email: chloe48@hoeks.nl
                      date_of_birth: '2021-12-25'
                      address: "van Duvenvoirdestraat 16\n1949AN Beek"
                      phone_number: '+316677260032'
                    -
                      id: 2
                      first_name: Aaron
                      last_name: 'van der Velden'
                      email: isis.peters@heinrichs.com
                      date_of_birth: '2021-12-21'
                      address: "Blomring 1-p\n2685VZ Zwijndrecht"
                      phone_number: '+8555950674310'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        first_name: Vajèn
                        last_name: Joosten
                        email: chloe48@hoeks.nl
                        date_of_birth: '2021-12-25'
                        address: "van Duvenvoirdestraat 16\n1949AN Beek"
                        phone_number: '+316677260032'
                      -
                        id: 2
                        first_name: Aaron
                        last_name: 'van der Velden'
                        email: isis.peters@heinrichs.com
                        date_of_birth: '2021-12-21'
                        address: "Blomring 1-p\n2685VZ Zwijndrecht"
                        phone_number: '+8555950674310'
                    items:
                      type: object
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/garages:
    get:
      summary: 'GET api/garages'
      description: 'Retuns all the garages.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      name: 'Sten Haselaar'
                      address: "van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk"
                      phone_number: '+41682531929'
                      email: lveenstra@gmail.com
                    -
                      name: ut
                      address: placeat
                      phone_number: '+3125544785'
                      email: hic@gmail.com
                properties:
                  data:
                    type: array
                    example:
                      -
                        name: 'Sten Haselaar'
                        address: "van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk"
                        phone_number: '+41682531929'
                        email: lveenstra@gmail.com
                      -
                        name: ut
                        address: placeat
                        phone_number: '+3125544785'
                        email: hic@gmail.com
                    items:
                      type: object
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  '/api/garages/address/{address}':
    get:
      summary: 'GET api/garages/address/{address}'
      description: 'Search garages by address.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      name: 'Sten Haselaar'
                      address: "van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk"
                      phone_number: '+41682531929'
                      email: lveenstra@gmail.com
                properties:
                  data:
                    type: array
                    example:
                      -
                        name: 'Sten Haselaar'
                        address: "van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk"
                        phone_number: '+41682531929'
                        email: lveenstra@gmail.com
                    items:
                      type: object
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: address
        description: ''
        example: expedita
        required: true
        schema:
          type: string
  '/api/garages/{id}':
    get:
      summary: 'GET api/garages/{id}'
      description: 'Search garage by ID.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  user_id: 12
                  name: 'Sten Haselaar'
                  address: "van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk"
                  email: lveenstra@gmail.com
                  phone_number: '+41682531929'
                properties:
                  id:
                    type: integer
                    example: 1
                  user_id:
                    type: integer
                    example: 12
                  name:
                    type: string
                    example: 'Sten Haselaar'
                  address:
                    type: string
                    example: "van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk"
                  email:
                    type: string
                    example: lveenstra@gmail.com
                  phone_number:
                    type: string
                    example: '+41682531929'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the garage.'
        example: 14
        required: true
        schema:
          type: integer
  /api/cars:
    get:
      summary: 'GET api/cars'
      description: 'Get all the cars in the Database.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      user_id: 13
                      vin_number: 5kkt4y594A38e7y7h
                      plate: UZK-611
                      type: small
                      fuel: hybrid
                      make: Ford
                      model: '46'
                      engine: '4'
                      gear_box: automatic
                      air_conditioner: 1
                      color: red
                    -
                      id: 2
                      user_id: 9
                      vin_number: 6ys7t1ej1A6xhv8rc
                      plate: ZFD-892
                      type: hatchback
                      fuel: hybrid
                      make: Chrysler
                      model: Kingte
                      engine: Attiva
                      gear_box: automatic
                      air_conditioner: 1
                      color: red
                    -
                      id: 3
                      user_id: 11
                      vin_number: 3l2az2zw0Ayhv6nv6
                      plate: KLC-009
                      type: SUV
                      fuel: electric
                      make: Innocenti
                      model: Beast
                      engine: H3
                      gear_box: automatic
                      air_conditioner: 1
                      color: red
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        user_id: 13
                        vin_number: 5kkt4y594A38e7y7h
                        plate: UZK-611
                        type: small
                        fuel: hybrid
                        make: Ford
                        model: '46'
                        engine: '4'
                        gear_box: automatic
                        air_conditioner: 1
                        color: red
                      -
                        id: 2
                        user_id: 9
                        vin_number: 6ys7t1ej1A6xhv8rc
                        plate: ZFD-892
                        type: hatchback
                        fuel: hybrid
                        make: Chrysler
                        model: Kingte
                        engine: Attiva
                        gear_box: automatic
                        air_conditioner: 1
                        color: red
                      -
                        id: 3
                        user_id: 11
                        vin_number: 3l2az2zw0Ayhv6nv6
                        plate: KLC-009
                        type: SUV
                        fuel: electric
                        make: Innocenti
                        model: Beast
                        engine: H3
                        gear_box: automatic
                        air_conditioner: 1
                        color: red
                    items:
                      type: object
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  '/api/garage/client/update/{client_id}':
    put:
      summary: 'PUT api/garage/client/update/{client_id}'
      description: 'Update client of the garage.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Updated successful'
                properties:
                  message:
                    type: string
                    example: 'Updated successful'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Not Found.'
                properties:
                  message:
                    type: string
                    example: 'Not Found.'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    first_name:
                      - 'The first name field is required.'
                    last_name:
                      - 'The last name field is required.'
                    email:
                      - 'The email field is required.'
                    date_of_birth:
                      - 'The date of birth field is required.'
                    address:
                      - 'The address field is required.'
                    phone_number:
                      - 'The phone number field is required.'
                properties:
                  errors:
                    type: object
                    example:
                      first_name:
                        - 'The first name field is required.'
                      last_name:
                        - 'The last name field is required.'
                      email:
                        - 'The email field is required.'
                      date_of_birth:
                        - 'The date of birth field is required.'
                      address:
                        - 'The address field is required.'
                      phone_number:
                        - 'The phone number field is required.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: et
                last_name:
                  type: string
                  description: ''
                  example: deleniti
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: etorp@example.org
                date_of_birth:
                  type: string
                  description: ''
                  example: sint
                address:
                  type: string
                  description: ''
                  example: eveniet
                phone_number:
                  type: string
                  description: ''
                  example: illo
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
    parameters:
      -
        in: path
        name: client_id
        description: 'The ID of the client.'
        example: aperiam
        required: true
        schema:
          type: string
  /api/garage/id:
    get:
      summary: 'GET api/garage/id'
      description: 'Returns the ID of the garage that you are working.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: integer
                example: 1
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/reservation:
    get:
      summary: 'GET api/reservation'
      description: 'Get all the reservation that you have made.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 6
                    user_id: 1
                    garage_id: 1
                    vin_number: 1r0pu3w1XAbfn5l30
                    description: 'Optio nihil quaerat quaerat. Est sunt eos neque mollitia consectetur sit reiciendis. Accusamus et eum ad rerum.'
                    date: '1990-07-26'
                    startingTime: '01:21:29'
                    endingTime: '00:21:57'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
    post:
      summary: 'POST api/reservation'
      description: "Creating reservation on specific garage.\nThis endpoint is used by Clients, Garage Manager, Admin."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user_id: 1
                  garage_id: 1
                  vin_number: 1r0pu3w1XAbfn5l30
                  description: 'Optio nihil quaerat quaerat. Est sunt eos neque mollitia consectetur sit reiciendis. Accusamus et eum ad rerum.'
                  date: '1990-07-26'
                  startingTime: '01:21:29'
                  endingTime: '00:21:57'
                  id: 6
                properties:
                  user_id:
                    type: integer
                    example: 1
                  garage_id:
                    type: integer
                    example: 1
                  vin_number:
                    type: string
                    example: 1r0pu3w1XAbfn5l30
                  description:
                    type: string
                    example: 'Optio nihil quaerat quaerat. Est sunt eos neque mollitia consectetur sit reiciendis. Accusamus et eum ad rerum.'
                  date:
                    type: string
                    example: '1990-07-26'
                  startingTime:
                    type: string
                    example: '01:21:29'
                  endingTime:
                    type: string
                    example: '00:21:57'
                  id:
                    type: integer
                    example: 6
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    user_id:
                      - 'The user id field is required.'
                    garage_id:
                      - 'The garage id field is required.'
                    vin_number:
                      - 'The vin number field is required.'
                    description:
                      - 'The description field is required.'
                    date:
                      - 'The date field is required.'
                    startingTime:
                      - 'The starting time field is required.'
                    endingTime:
                      - 'The ending time field is required.'
                properties:
                  errors:
                    type: object
                    example:
                      user_id:
                        - 'The user id field is required.'
                      garage_id:
                        - 'The garage id field is required.'
                      vin_number:
                        - 'The vin number field is required.'
                      description:
                        - 'The description field is required.'
                      date:
                        - 'The date field is required.'
                      startingTime:
                        - 'The starting time field is required.'
                      endingTime:
                        - 'The ending time field is required.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: et
                garage_id:
                  type: string
                  description: ''
                  example: quis
                vin_number:
                  type: string
                  description: ''
                  example: magnam
                description:
                  type: string
                  description: ''
                  example: vitae
                date:
                  type: string
                  description: ''
                  example: repellendus
                startingTime:
                  type: string
                  description: ''
                  example: qui
                endingTime:
                  type: string
                  description: ''
                  example: quo
              required:
                - user_id
                - garage_id
                - vin_number
                - description
                - date
                - startingTime
                - endingTime
  /api/cars/create:
    post:
      summary: 'POST api/cars/create'
      description: 'Adding new car as Garage Administrator'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created'
                properties:
                  message:
                    type: string
                    example: 'Successfully created'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    user_id:
                      - 'The user id field is required.'
                    vin_number:
                      - 'The vin number field is required.'
                    plate:
                      - 'The plate field is required.'
                    type:
                      - 'The type field is required.'
                    fuel:
                      - 'The fuel field is required.'
                    make:
                      - 'The make field is required.'
                    model:
                      - 'The model field is required.'
                    engine:
                      - 'The engine field is required.'
                    gear_box:
                      - 'The gear box field is required.'
                    air_conditioner:
                      - 'The air conditioner field is required.'
                    color:
                      - 'The color field is required.'
                properties:
                  errors:
                    type: object
                    example:
                      user_id:
                        - 'The user id field is required.'
                      vin_number:
                        - 'The vin number field is required.'
                      plate:
                        - 'The plate field is required.'
                      type:
                        - 'The type field is required.'
                      fuel:
                        - 'The fuel field is required.'
                      make:
                        - 'The make field is required.'
                      model:
                        - 'The model field is required.'
                      engine:
                        - 'The engine field is required.'
                      gear_box:
                        - 'The gear box field is required.'
                      air_conditioner:
                        - 'The air conditioner field is required.'
                      color:
                        - 'The color field is required.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Administrator'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 2
                vin_number:
                  type: string
                  description: ''
                  example: id
                plate:
                  type: string
                  description: ''
                  example: ipsam
                type:
                  type: string
                  description: ''
                  example: ut
                fuel:
                  type: string
                  description: ''
                  example: cumque
                make:
                  type: string
                  description: ''
                  example: vero
                model:
                  type: string
                  description: ''
                  example: temporibus
                engine:
                  type: string
                  description: ''
                  example: est
                gear_box:
                  type: string
                  description: ''
                  example: dolorum
                air_conditioner:
                  type: boolean
                  description: ''
                  example: false
                color:
                  type: string
                  description: ''
                  example: dicta
              required:
                - user_id
                - vin_number
                - plate
                - type
                - fuel
                - make
                - model
                - engine
                - gear_box
                - air_conditioner
                - color
  /api/garage:
    get:
      summary: 'GET api/garage'
      description: 'Returns the garages of the user that is authenticated.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    user_id: 12
                    name: 'Sten Haselaar'
                    address: "van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk"
                    email: lveenstra@gmail.com
                    phone_number: '+41682531929'
                  -
                    id: 6
                    user_id: 12
                    name: ut
                    address: placeat
                    email: hic@gmail.com
                    phone_number: '+3125544785'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Administrator'
  /api/client/register:
    post:
      summary: 'POST api/client/register'
      description: 'This endpoint is used to create client. The endpoint is used for development pupposes.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name: Luuk
                  last_name: 'van der Steen'
                  email: luckeeylssuddukss.633@gmail.com
                  date_of_birth: '2001-02-06'
                  address: 'Juan Leon Mera, 19, Av. Patria'
                  phone_number: '4 123 4567'
                  id: 14
                properties:
                  first_name:
                    type: string
                    example: Luuk
                  last_name:
                    type: string
                    example: 'van der Steen'
                  email:
                    type: string
                    example: luckeeylssuddukss.633@gmail.com
                  date_of_birth:
                    type: string
                    example: '2001-02-06'
                  address:
                    type: string
                    example: 'Juan Leon Mera, 19, Av. Patria'
                  phone_number:
                    type: string
                    example: '4 123 4567'
                  id:
                    type: integer
                    example: 14
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name:
                    - 'The first name field is required.'
                  last_name:
                    - 'The last name field is required.'
                  email:
                    - 'The email field is required.'
                  date_of_birth:
                    - 'The date of birth field is required.'
                  address:
                    - 'The address field is required.'
                  phone_number:
                    - 'The phone number field is required.'
                  password:
                    - 'The password field is required.'
                properties:
                  first_name:
                    type: array
                    example:
                      - 'The first name field is required.'
                    items:
                      type: string
                  last_name:
                    type: array
                    example:
                      - 'The last name field is required.'
                    items:
                      type: string
                  email:
                    type: array
                    example:
                      - 'The email field is required.'
                    items:
                      type: string
                  date_of_birth:
                    type: array
                    example:
                      - 'The date of birth field is required.'
                    items:
                      type: string
                  address:
                    type: array
                    example:
                      - 'The address field is required.'
                    items:
                      type: string
                  phone_number:
                    type: array
                    example:
                      - 'The phone number field is required.'
                    items:
                      type: string
                  password:
                    type: array
                    example:
                      - 'The password field is required.'
                    items:
                      type: string
      tags:
        - 'Garage Administrator'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: Luuk
                last_name:
                  type: string
                  description: ''
                  example: 'van der Steen'
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: nikolaus.antone@example.com
                date_of_birth:
                  type: string
                  description: ''
                  example: '2001-02-06'
                address:
                  type: string
                  description: ''
                  example: 'Juan Leon Mera, 19, Av. Patria'
                phone_number:
                  type: string
                  description: ''
                  example: '+5514123456'
                password:
                  type: string
                  description: ''
                  example: qui
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
                - password
      security: []
  /api/client/create:
    post:
      summary: 'POST api/client/create'
      description: 'Create new client as Garage Administrator'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name:
                    - 'The first name field is required.'
                  last_name:
                    - 'The last name field is required.'
                  email:
                    - 'The email field is required.'
                  date_of_birth:
                    - 'The date of birth field is required.'
                  address:
                    - 'The address field is required.'
                  phone_number:
                    - 'The phone number field is required.'
                  password:
                    - 'The password field is required.'
                properties:
                  first_name:
                    type: array
                    example:
                      - 'The first name field is required.'
                    items:
                      type: string
                  last_name:
                    type: array
                    example:
                      - 'The last name field is required.'
                    items:
                      type: string
                  email:
                    type: array
                    example:
                      - 'The email field is required.'
                    items:
                      type: string
                  date_of_birth:
                    type: array
                    example:
                      - 'The date of birth field is required.'
                    items:
                      type: string
                  address:
                    type: array
                    example:
                      - 'The address field is required.'
                    items:
                      type: string
                  phone_number:
                    type: array
                    example:
                      - 'The phone number field is required.'
                    items:
                      type: string
                  password:
                    type: array
                    example:
                      - 'The password field is required.'
                    items:
                      type: string
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Administrator'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: Luuk
                last_name:
                  type: string
                  description: ''
                  example: 'van der Steen'
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: easton.schaden@example.net
                date_of_birth:
                  type: string
                  description: ''
                  example: '2001-02-06'
                address:
                  type: string
                  description: ''
                  example: 'Juan Leon Mera, 19, Av. Patria'
                phone_number:
                  type: string
                  description: ''
                  example: '+5514123456'
                password:
                  type: string
                  description: ''
                  example: password
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
                - password
  /api/employee/create:
    post:
      summary: 'POST api/employee/create'
      description: "Create new employee.\nAdd that employee to the garage"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created'
                properties:
                  message:
                    type: string
                    example: 'Successfully created'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    first_name:
                      - 'The first name field is required.'
                    last_name:
                      - 'The last name field is required.'
                    date_of_birth:
                      - 'The date of birth field is required.'
                    address:
                      - 'The address field is required.'
                    phone_number:
                      - 'The phone number field is required.'
                    email:
                      - 'The email field is required.'
                    garage_id:
                      - 'The garage id field is required.'
                properties:
                  errors:
                    type: object
                    example:
                      first_name:
                        - 'The first name field is required.'
                      last_name:
                        - 'The last name field is required.'
                      date_of_birth:
                        - 'The date of birth field is required.'
                      address:
                        - 'The address field is required.'
                      phone_number:
                        - 'The phone number field is required.'
                      email:
                        - 'The email field is required.'
                      garage_id:
                        - 'The garage id field is required.'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  Error: 'Employee not saved'
                properties:
                  Error:
                    type: string
                    example: 'Employee not saved'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Administrator'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'user table. Must be at least 2 characters.'
                  example: c
                last_name:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: ''
                date_of_birth:
                  type: string
                  description: ''
                  example: aut
                address:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: xf
                phone_number:
                  type: string
                  description: 'Must be at least 5 characters.'
                  example: ehowh
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: jerde.ellsworth@example.org
                garage_id:
                  type: string
                  description: ''
                  example: aut
                role:
                  type: number
                  description: ''
                  example: 2131.0
              required:
                - first_name
                - last_name
                - date_of_birth
                - address
                - phone_number
                - email
                - garage_id
  '/api/employee/update/{employee_id}':
    put:
      summary: 'PUT api/employee/update/{employee_id}'
      description: 'Edit employee employee working in the garage.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  'error: record not found': 'Employee not found'
                properties:
                  'error: record not found':
                    type: string
                    example: 'Employee not found'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  Error: 'Employee not saved'
                properties:
                  Error:
                    type: string
                    example: 'Employee not saved'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Administrator'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'user table. Must be at least 2 characters.'
                  example: wy
                last_name:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: xe
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: bcrist@example.net
                date_of_birth:
                  type: string
                  description: ''
                  example: deserunt
                address:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: x
                phone_number:
                  type: string
                  description: 'Must be at least 5 characters.'
                  example: c
                garage_id:
                  type: integer
                  description: ''
                  example: 16
                role:
                  type: number
                  description: role.
                  example: 1613.0
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
                - garage_id
    parameters:
      -
        in: path
        name: employee_id
        description: 'The ID of the employee.'
        example: ipsa
        required: true
        schema:
          type: string
  '/api/employees/{garage_id}':
    get:
      summary: 'GET api/employees/{garage_id}'
      description: 'Returning all the employees in the garage.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 6
                    first_name: Chris
                    last_name: Blom
                    email: jdachgeldt@vanderberg.com
                    phone_number: '+23671905652'
                    date_of_birth: '2021-12-27'
                    address: "Kriensstraat 87-u\n4401CG Kommerzijl"
                    role: mechanic
                    salary: 500
                  -
                    id: 7
                    first_name: Lola
                    last_name: Dirksen
                    email: mvanhetheerenveen@winnrich.nl
                    phone_number: '+600830017408'
                    date_of_birth: '2021-12-14'
                    address: "Moetdreef 6\n9269SZ Wekerom"
                    role: mechanic
                    salary: 200
                  -
                    id: 12
                    first_name: Benjamin
                    last_name: 'Zuérius Boxhorn van Miggrode'
                    email: pham.maud@vanembden.org
                    phone_number: '+6802172188'
                    date_of_birth: '2021-12-24'
                    address: "van de Walweg 94-p\n7606XL Poortvliet"
                    role: garage_administration
                    salary: 200
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Administrator'
    parameters:
      -
        in: path
        name: garage_id
        description: 'The ID of the garage.'
        example: 17
        required: true
        schema:
          type: integer
  /api/user/update:
    put:
      summary: 'PUT api/user/update'
      description: 'Update the user that is authenticated.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Updated successful'
                properties:
                  message:
                    type: string
                    example: 'Updated successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    first_name:
                      - 'The first name field is required.'
                    last_name:
                      - 'The last name field is required.'
                    email:
                      - 'The email field is required.'
                    date_of_birth:
                      - 'The date of birth field is required.'
                    address:
                      - 'The address field is required.'
                    phone_number:
                      - 'The phone number field is required.'
                properties:
                  errors:
                    type: object
                    example:
                      first_name:
                        - 'The first name field is required.'
                      last_name:
                        - 'The last name field is required.'
                      email:
                        - 'The email field is required.'
                      date_of_birth:
                        - 'The date of birth field is required.'
                      address:
                        - 'The address field is required.'
                      phone_number:
                        - 'The phone number field is required.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Administrator'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: odit
                last_name:
                  type: string
                  description: ''
                  example: explicabo
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: lexi31@example.org
                date_of_birth:
                  type: string
                  description: ''
                  example: quo
                address:
                  type: string
                  description: ''
                  example: consequuntur
                phone_number:
                  type: string
                  description: ''
                  example: omnis
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
  '/api/reservations/{garage_id}':
    get:
      summary: 'GET api/reservations/{garage_id}'
      description: 'Get all the reservation per garage.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    user_id: 3
                    garage_id: 1
                    vin_number: 5kkt4y594A38e7y7h
                    description: 'Accusamus dolores officia totam dolorem doloribus eaque consequatur tempora. Sunt sed magni et omnis earum deleniti. Voluptatem officia et mollitia expedita qui.'
                    date: '1991-05-09'
                    startingTime: '16:59:01'
                    endingTime: '17:24:57'
                  -
                    id: 2
                    user_id: 4
                    garage_id: 1
                    vin_number: 1r0pu3w1XAbfn5l30
                    description: 'Cupiditate in vel commodi rerum unde. Vel exercitationem consequatur iusto aperiam dolor maiores sunt modi. At molestiae numquam tempora vel velit ipsam iure explicabo.'
                    date: '2013-11-26'
                    startingTime: '23:35:23'
                    endingTime: '18:23:15'
                  -
                    id: 3
                    user_id: 5
                    garage_id: 1
                    vin_number: 6ys7t1ej1A6xhv8rc
                    description: 'Optio commodi modi itaque eius. Et non ratione est excepturi id. Iusto tempore est velit adipisci ad in.'
                    date: '2000-04-10'
                    startingTime: '16:20:45'
                    endingTime: '04:34:26'
                  -
                    id: 4
                    user_id: 2
                    garage_id: 1
                    vin_number: 337vp16w9A7kj9jcp
                    description: 'Tenetur voluptatem atque unde et veniam qui est tempora. Quia numquam sed dicta earum quia velit similique sint. Veritatis dolores ut quis magni quidem suscipit dolorem natus.'
                    date: '1996-01-25'
                    startingTime: '11:26:08'
                    endingTime: '22:20:34'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Administrator'
    parameters:
      -
        in: path
        name: garage_id
        description: 'The ID of the garage.'
        example: 5
        required: true
        schema:
          type: integer
  /api/garage/client/register:
    post:
      summary: 'POST api/client/register'
      description: 'This endpoint is used to create client. The endpoint is used for development pupposes.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name: Luuk
                  last_name: 'van der Steen'
                  email: luckeeylssuddukss.633@gmail.com
                  date_of_birth: '2001-02-06'
                  address: 'Juan Leon Mera, 19, Av. Patria'
                  phone_number: '4 123 4567'
                  id: 14
                properties:
                  first_name:
                    type: string
                    example: Luuk
                  last_name:
                    type: string
                    example: 'van der Steen'
                  email:
                    type: string
                    example: luckeeylssuddukss.633@gmail.com
                  date_of_birth:
                    type: string
                    example: '2001-02-06'
                  address:
                    type: string
                    example: 'Juan Leon Mera, 19, Av. Patria'
                  phone_number:
                    type: string
                    example: '4 123 4567'
                  id:
                    type: integer
                    example: 14
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name:
                    - 'The first name field is required.'
                  last_name:
                    - 'The last name field is required.'
                  email:
                    - 'The email field is required.'
                  date_of_birth:
                    - 'The date of birth field is required.'
                  address:
                    - 'The address field is required.'
                  phone_number:
                    - 'The phone number field is required.'
                  password:
                    - 'The password field is required.'
                properties:
                  first_name:
                    type: array
                    example:
                      - 'The first name field is required.'
                    items:
                      type: string
                  last_name:
                    type: array
                    example:
                      - 'The last name field is required.'
                    items:
                      type: string
                  email:
                    type: array
                    example:
                      - 'The email field is required.'
                    items:
                      type: string
                  date_of_birth:
                    type: array
                    example:
                      - 'The date of birth field is required.'
                    items:
                      type: string
                  address:
                    type: array
                    example:
                      - 'The address field is required.'
                    items:
                      type: string
                  phone_number:
                    type: array
                    example:
                      - 'The phone number field is required.'
                    items:
                      type: string
                  password:
                    type: array
                    example:
                      - 'The password field is required.'
                    items:
                      type: string
      tags:
        - 'Garage Administrator'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: Luuk
                last_name:
                  type: string
                  description: ''
                  example: 'van der Steen'
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: candace11@example.org
                date_of_birth:
                  type: string
                  description: ''
                  example: '2001-02-06'
                address:
                  type: string
                  description: ''
                  example: 'Juan Leon Mera, 19, Av. Patria'
                phone_number:
                  type: string
                  description: ''
                  example: '+5514123456'
                password:
                  type: string
                  description: ''
                  example: velit
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
                - password
      security: []
  '/api/client/cars/{car_id}':
    put:
      summary: 'PUT api/client/cars/{car_id}'
      description: 'Client update the information about their car.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully updated'
                properties:
                  message:
                    type: string
                    example: 'Successfully updated'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    user_id:
                      - 'The user id field is required.'
                    vin_number:
                      - 'The vin number field is required.'
                    plate:
                      - 'The plate field is required.'
                    type:
                      - 'The type field is required.'
                    fuel:
                      - 'The fuel field is required.'
                    make:
                      - 'The make field is required.'
                    model:
                      - 'The model field is required.'
                    engine:
                      - 'The engine field is required.'
                    gear_box:
                      - 'The gear box field is required.'
                    air_conditioner:
                      - 'The air conditioner field is required.'
                    color:
                      - 'The color field is required.'
                properties:
                  errors:
                    type: object
                    example:
                      user_id:
                        - 'The user id field is required.'
                      vin_number:
                        - 'The vin number field is required.'
                      plate:
                        - 'The plate field is required.'
                      type:
                        - 'The type field is required.'
                      fuel:
                        - 'The fuel field is required.'
                      make:
                        - 'The make field is required.'
                      model:
                        - 'The model field is required.'
                      engine:
                        - 'The engine field is required.'
                      gear_box:
                        - 'The gear box field is required.'
                      air_conditioner:
                        - 'The air conditioner field is required.'
                      color:
                        - 'The color field is required.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Client'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 3
                vin_number:
                  type: string
                  description: ''
                  example: veniam
                plate:
                  type: string
                  description: ''
                  example: eum
                type:
                  type: string
                  description: ''
                  example: eligendi
                fuel:
                  type: string
                  description: ''
                  example: exercitationem
                make:
                  type: string
                  description: ''
                  example: necessitatibus
                model:
                  type: string
                  description: ''
                  example: ab
                engine:
                  type: string
                  description: ''
                  example: ab
                gear_box:
                  type: string
                  description: ''
                  example: est
                air_conditioner:
                  type: boolean
                  description: ''
                  example: true
                color:
                  type: string
                  description: ''
                  example: et
              required:
                - user_id
                - vin_number
                - plate
                - type
                - fuel
                - make
                - model
                - engine
                - gear_box
                - air_conditioner
                - color
    delete:
      summary: 'DELETE api/client/cars/{car_id}'
      description: 'Remove a car in your profile.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  '404': 'Not Found'
                properties:
                  404:
                    type: string
                    example: 'Not Found'
      tags:
        - 'Garage Client'
      security: []
    parameters:
      -
        in: path
        name: car_id
        description: 'The ID of the car.'
        example: 12
        required: true
        schema:
          type: integer
  '/api/garage/client/cars/{client_id}':
    get:
      summary: 'GET api/garage/client/cars/{client_id}'
      description: 'Returns all the cars of the client.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 4
                      user_id: 3
                      vin_number: 337vp16w9A7kj9jcp
                      plate: IIL-805
                      type: sedan
                      fuel: diesel
                      make: Mazda
                      model: 'SuperВ Combi'
                      engine: 'PS 160'
                      gear_box: automatic
                      air_conditioner: 1
                      color: red
                    -
                      id: 5
                      user_id: 3
                      vin_number: 1r0pu3w1XAbfn5l30
                      plate: RSV-723
                      type: SUV
                      fuel: hybrid
                      make: Adler
                      model: Metro
                      engine: Freeclimber
                      gear_box: manual
                      air_conditioner: 1
                      color: red
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 4
                        user_id: 3
                        vin_number: 337vp16w9A7kj9jcp
                        plate: IIL-805
                        type: sedan
                        fuel: diesel
                        make: Mazda
                        model: 'SuperВ Combi'
                        engine: 'PS 160'
                        gear_box: automatic
                        air_conditioner: 1
                        color: red
                      -
                        id: 5
                        user_id: 3
                        vin_number: 1r0pu3w1XAbfn5l30
                        plate: RSV-723
                        type: SUV
                        fuel: hybrid
                        make: Adler
                        model: Metro
                        engine: Freeclimber
                        gear_box: manual
                        air_conditioner: 1
                        color: red
                    items:
                      type: object
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Client'
    parameters:
      -
        in: path
        name: client_id
        description: 'The ID of the client.'
        example: 20
        required: true
        schema:
          type: integer
  /api/client/cars:
    get:
      summary: 'GET api/client/cars'
      description: 'Return all the cars of the client that is authenticated'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      user_id: 1
                      vin_number: 5kkt4y594A38e7y7h
                      plate: UZK-611
                      type: small
                      fuel: hybrid
                      make: Ford
                      model: '46'
                      engine: '4'
                      gear_box: automatic
                      air_conditioner: 1
                      color: red
                    -
                      id: 2
                      user_id: 1
                      vin_number: 6ys7t1ej1A6xhv8rc
                      plate: ZFD-892
                      type: hatchback
                      fuel: hybrid
                      make: Chrysler
                      model: Kingte
                      engine: Attiva
                      gear_box: automatic
                      air_conditioner: 1
                      color: red
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        user_id: 1
                        vin_number: 5kkt4y594A38e7y7h
                        plate: UZK-611
                        type: small
                        fuel: hybrid
                        make: Ford
                        model: '46'
                        engine: '4'
                        gear_box: automatic
                        air_conditioner: 1
                        color: red
                      -
                        id: 2
                        user_id: 1
                        vin_number: 6ys7t1ej1A6xhv8rc
                        plate: ZFD-892
                        type: hatchback
                        fuel: hybrid
                        make: Chrysler
                        model: Kingte
                        engine: Attiva
                        gear_box: automatic
                        air_conditioner: 1
                        color: red
                    items:
                      type: object
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Client'
    post:
      summary: 'POST api/client/cars'
      description: 'Client post new car in their profile.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Successfully created'
                properties:
                  message:
                    type: string
                    example: 'Successfully created'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    user_id:
                      - 'The user id field is required.'
                    vin_number:
                      - 'The vin number field is required.'
                    plate:
                      - 'The plate field is required.'
                    type:
                      - 'The type field is required.'
                    fuel:
                      - 'The fuel field is required.'
                    make:
                      - 'The make field is required.'
                    model:
                      - 'The model field is required.'
                    engine:
                      - 'The engine field is required.'
                    gear_box:
                      - 'The gear box field is required.'
                    air_conditioner:
                      - 'The air conditioner field is required.'
                    color:
                      - 'The color field is required.'
                properties:
                  errors:
                    type: object
                    example:
                      user_id:
                        - 'The user id field is required.'
                      vin_number:
                        - 'The vin number field is required.'
                      plate:
                        - 'The plate field is required.'
                      type:
                        - 'The type field is required.'
                      fuel:
                        - 'The fuel field is required.'
                      make:
                        - 'The make field is required.'
                      model:
                        - 'The model field is required.'
                      engine:
                        - 'The engine field is required.'
                      gear_box:
                        - 'The gear box field is required.'
                      air_conditioner:
                        - 'The air conditioner field is required.'
                      color:
                        - 'The color field is required.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Client'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 3
                vin_number:
                  type: string
                  description: ''
                  example: deserunt
                plate:
                  type: string
                  description: ''
                  example: iure
                type:
                  type: string
                  description: ''
                  example: saepe
                fuel:
                  type: string
                  description: ''
                  example: ut
                make:
                  type: string
                  description: ''
                  example: soluta
                model:
                  type: string
                  description: ''
                  example: aut
                engine:
                  type: string
                  description: ''
                  example: sint
                gear_box:
                  type: string
                  description: ''
                  example: laborum
                air_conditioner:
                  type: boolean
                  description: ''
                  example: false
                color:
                  type: string
                  description: ''
                  example: in
              required:
                - user_id
                - vin_number
                - plate
                - type
                - fuel
                - make
                - model
                - engine
                - gear_box
                - air_conditioner
                - color
  '/api/client/cars/{client_id}':
    get:
      summary: 'GET api/garage/client/cars/{client_id}'
      description: 'Returns all the cars of the client.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 4
                      user_id: 3
                      vin_number: 337vp16w9A7kj9jcp
                      plate: IIL-805
                      type: sedan
                      fuel: diesel
                      make: Mazda
                      model: 'SuperВ Combi'
                      engine: 'PS 160'
                      gear_box: automatic
                      air_conditioner: 1
                      color: red
                    -
                      id: 5
                      user_id: 3
                      vin_number: 1r0pu3w1XAbfn5l30
                      plate: RSV-723
                      type: SUV
                      fuel: hybrid
                      make: Adler
                      model: Metro
                      engine: Freeclimber
                      gear_box: manual
                      air_conditioner: 1
                      color: red
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 4
                        user_id: 3
                        vin_number: 337vp16w9A7kj9jcp
                        plate: IIL-805
                        type: sedan
                        fuel: diesel
                        make: Mazda
                        model: 'SuperВ Combi'
                        engine: 'PS 160'
                        gear_box: automatic
                        air_conditioner: 1
                        color: red
                      -
                        id: 5
                        user_id: 3
                        vin_number: 1r0pu3w1XAbfn5l30
                        plate: RSV-723
                        type: SUV
                        fuel: hybrid
                        make: Adler
                        model: Metro
                        engine: Freeclimber
                        gear_box: manual
                        air_conditioner: 1
                        color: red
                    items:
                      type: object
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'Garage Client'
    parameters:
      -
        in: path
        name: client_id
        description: 'The ID of the client.'
        example: 6
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'Garage Administrator'
    description: ''
  -
    name: 'Garage Client'
    description: ''
