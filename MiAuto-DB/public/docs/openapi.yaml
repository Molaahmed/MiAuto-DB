openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/login:
    post:
      summary: 'POST api/login'
      description: "This endpoint is used by all types of users to be authenticated.\nIn the response, there will be a token that you need to use in every request that you make to the server.\n\n<aside class=\"notice\">Use the token in every request that you make in order to be authorized to access resources.</aside>"
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            text/plain:
              schema:
                type: string
                example: "{\n \"4|va23TB3m66Pr1W7ozSfDuRWMsHnf6fhwexyTY1Wg\"\n}"
        422:
          description: 'user not found'
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'These credentials do not match out records.'
                properties:
                  message:
                    type: string
                    example: 'These credentials do not match out records.'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The email of the user.'
                  example: example@gmail.com
                password:
                  type: string
                  description: 'Password of the user.'
                  example: password
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: 'POST api/logout'
      description: 'This endpoint will log out the user and destroy the token that is used.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/client/register:
    post:
      summary: 'POST api/client/register'
      description: 'This endpoint is used to create client. The endpoint is used for development pupposes.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name: Luuk
                  last_name: 'van der Steen'
                  email: luckeeylssuddukss.633@gmail.com
                  date_of_birth: '2001-02-06'
                  address: 'Juan Leon Mera, 19, Av. Patria'
                  phone_number: '4 123 4567'
                  id: 14
                properties:
                  first_name:
                    type: string
                    example: Luuk
                  last_name:
                    type: string
                    example: 'van der Steen'
                  email:
                    type: string
                    example: luckeeylssuddukss.633@gmail.com
                  date_of_birth:
                    type: string
                    example: '2001-02-06'
                  address:
                    type: string
                    example: 'Juan Leon Mera, 19, Av. Patria'
                  phone_number:
                    type: string
                    example: '4 123 4567'
                  id:
                    type: integer
                    example: 14
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name:
                    - 'The first name field is required.'
                  last_name:
                    - 'The last name field is required.'
                  email:
                    - 'The email field is required.'
                  date_of_birth:
                    - 'The date of birth field is required.'
                  address:
                    - 'The address field is required.'
                  phone_number:
                    - 'The phone number field is required.'
                properties:
                  first_name:
                    type: array
                    example:
                      - 'The first name field is required.'
                    items:
                      type: string
                  last_name:
                    type: array
                    example:
                      - 'The last name field is required.'
                    items:
                      type: string
                  email:
                    type: array
                    example:
                      - 'The email field is required.'
                    items:
                      type: string
                  date_of_birth:
                    type: array
                    example:
                      - 'The date of birth field is required.'
                    items:
                      type: string
                  address:
                    type: array
                    example:
                      - 'The address field is required.'
                    items:
                      type: string
                  phone_number:
                    type: array
                    example:
                      - 'The phone number field is required.'
                    items:
                      type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: Luuk
                last_name:
                  type: string
                  description: ''
                  example: 'van der Steen'
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: marquardt.anabelle@example.org
                date_of_birth:
                  type: string
                  description: ''
                  example: '2001-02-06'
                address:
                  type: string
                  description: ''
                  example: 'Juan Leon Mera, 19, Av. Patria'
                phone_number:
                  type: string
                  description: ''
                  example: '+5514123456'
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
      security: []
  /api/garage/register:
    post:
      summary: 'POST api/garage/register'
      description: "This endpoint will first create a user and then assign the garage to that user.\nYou need to pass the client credentials and the garage in the same request."
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  user_id: 15
                  name: ut
                  address: placeat
                  email: hic@gmail.com
                  phone_number: '+3125544785'
                  id: 6
                properties:
                  user_id:
                    type: integer
                    example: 15
                  name:
                    type: string
                    example: ut
                  address:
                    type: string
                    example: placeat
                  email:
                    type: string
                    example: hic@gmail.com
                  phone_number:
                    type: string
                    example: '+3125544785'
                  id:
                    type: integer
                    example: 6
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name:
                    - 'The first name field is required.'
                  last_name:
                    - 'The last name field is required.'
                  email:
                    - 'The email field is required.'
                  date_of_birth:
                    - 'The date of birth field is required.'
                  address:
                    - 'The address field is required.'
                  phone_number:
                    - 'The phone number field is required.'
                  garage_email:
                    - 'The garage_email of garage field is required.'
                  garage_address:
                    - 'The garage_address of garage field is required.'
                  name:
                    - 'The name of garage field is required.'
                  garage_phone_number:
                    - 'The garage_phone_number of garage field is required.'
                properties:
                  first_name:
                    type: array
                    example:
                      - 'The first name field is required.'
                    items:
                      type: string
                  last_name:
                    type: array
                    example:
                      - 'The last name field is required.'
                    items:
                      type: string
                  email:
                    type: array
                    example:
                      - 'The email field is required.'
                    items:
                      type: string
                  date_of_birth:
                    type: array
                    example:
                      - 'The date of birth field is required.'
                    items:
                      type: string
                  address:
                    type: array
                    example:
                      - 'The address field is required.'
                    items:
                      type: string
                  phone_number:
                    type: array
                    example:
                      - 'The phone number field is required.'
                    items:
                      type: string
                  garage_email:
                    type: array
                    example:
                      - 'The garage_email of garage field is required.'
                    items:
                      type: string
                  garage_address:
                    type: array
                    example:
                      - 'The garage_address of garage field is required.'
                    items:
                      type: string
                  name:
                    type: array
                    example:
                      - 'The name of garage field is required.'
                    items:
                      type: string
                  garage_phone_number:
                    type: array
                    example:
                      - 'The garage_phone_number of garage field is required.'
                    items:
                      type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: Luuk
                last_name:
                  type: string
                  description: ''
                  example: 'van der Steen'
                date_of_birth:
                  type: string
                  description: ''
                  example: '2001-02-06'
                address:
                  type: string
                  description: ''
                  example: 'Juan Leon Mera, 19, Av. Patria'
                email:
                  type: string
                  description: ''
                  example: assumenda
                phone_number:
                  type: string
                  description: ''
                  example: '+5514123456'
                name:
                  type: string
                  description: 'Name of the garage.'
                  example: numquam
                garage_address:
                  type: string
                  description: 'Address of the garage.'
                  example: nesciunt
                garage_email:
                  type: string
                  description: 'Email of the garage.'
                  example: recusandae
                garage_phone_number:
                  type: string
                  description: 'Phone number of the garage.'
                  example: animi
              required:
                - first_name
                - last_name
                - date_of_birth
                - address
                - email
                - phone_number
                - name
                - garage_address
                - garage_email
                - garage_phone_number
      security: []
  /api/authenticated:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: 'GET api/user'
      description: 'Returns the data for the user that is authenticated.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 11
                  first_name: Dave
                  last_name: 'van der Kaay'
                  email: amin.tahiri@ismail.nl
                  date_of_birth: '2021-12-18'
                  address: "Koçdreef 5-7\n3551GH Tilburg"
                  phone_number: '+298159732'
                  role: garage_administration
                properties:
                  id:
                    type: integer
                    example: 11
                  first_name:
                    type: string
                    example: Dave
                  last_name:
                    type: string
                    example: 'van der Kaay'
                  email:
                    type: string
                    example: amin.tahiri@ismail.nl
                  date_of_birth:
                    type: string
                    example: '2021-12-18'
                  address:
                    type: string
                    example: "Koçdreef 5-7\n3551GH Tilburg"
                  phone_number:
                    type: string
                    example: '+298159732'
                  role:
                    type: string
                    example: garage_administration
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/users:
    get:
      summary: 'GET api/users'
      description: 'Returns all the clients.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      first_name: Vajèn
                      last_name: Joosten
                      email: chloe48@hoeks.nl
                      date_of_birth: '2021-12-25'
                      address: "van Duvenvoirdestraat 16\n1949AN Beek"
                      phone_number: '+316677260032'
                    -
                      id: 2
                      first_name: Aaron
                      last_name: 'van der Velden'
                      email: isis.peters@heinrichs.com
                      date_of_birth: '2021-12-21'
                      address: "Blomring 1-p\n2685VZ Zwijndrecht"
                      phone_number: '+8555950674310'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        first_name: Vajèn
                        last_name: Joosten
                        email: chloe48@hoeks.nl
                        date_of_birth: '2021-12-25'
                        address: "van Duvenvoirdestraat 16\n1949AN Beek"
                        phone_number: '+316677260032'
                      -
                        id: 2
                        first_name: Aaron
                        last_name: 'van der Velden'
                        email: isis.peters@heinrichs.com
                        date_of_birth: '2021-12-21'
                        address: "Blomring 1-p\n2685VZ Zwijndrecht"
                        phone_number: '+8555950674310'
                    items:
                      type: object
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
  /api/user/update:
    put:
      summary: 'PUT api/user/update'
      description: 'Update the user that is authenticated.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Updated successful'
                properties:
                  message:
                    type: string
                    example: 'Updated successful'
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    first_name:
                      - 'The first name field is required.'
                    last_name:
                      - 'The last name field is required.'
                    email:
                      - 'The email field is required.'
                    date_of_birth:
                      - 'The date of birth field is required.'
                    address:
                      - 'The address field is required.'
                    phone_number:
                      - 'The phone number field is required.'
                properties:
                  errors:
                    type: object
                    example:
                      first_name:
                        - 'The first name field is required.'
                      last_name:
                        - 'The last name field is required.'
                      email:
                        - 'The email field is required.'
                      date_of_birth:
                        - 'The date of birth field is required.'
                      address:
                        - 'The address field is required.'
                      phone_number:
                        - 'The phone number field is required.'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: consequatur
                last_name:
                  type: string
                  description: ''
                  example: eaque
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: crawford.zboncak@example.com
                date_of_birth:
                  type: string
                  description: ''
                  example: nulla
                address:
                  type: string
                  description: ''
                  example: ut
                phone_number:
                  type: string
                  description: ''
                  example: ducimus
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
  /api/reservation:
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: vel
                employee_id:
                  type: string
                  description: ''
                  example: quasi
                vin_number:
                  type: string
                  description: ''
                  example: illum
                description:
                  type: string
                  description: ''
                  example: tenetur
                date:
                  type: string
                  description: ''
                  example: reprehenderit
                startingTime:
                  type: string
                  description: ''
                  example: minus
                endingTime:
                  type: string
                  description: ''
                  example: ullam
              required:
                - user_id
                - employee_id
                - vin_number
                - description
                - date
                - startingTime
                - endingTime
      security: []
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/garages:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/garages/address/{address}':
    get:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: address
        description: ''
        example: at
        required: true
        schema:
          type: string
  '/api/garages/{id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the garage.'
        example: 15
        required: true
        schema:
          type: integer
  /api/cars:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/cars/create:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: accusamus
                vin_number:
                  type: string
                  description: ''
                  example: eveniet
                plate:
                  type: string
                  description: ''
                  example: et
                type:
                  type: string
                  description: ''
                  example: autem
                fuel:
                  type: string
                  description: ''
                  example: ut
                make:
                  type: string
                  description: ''
                  example: et
                model:
                  type: string
                  description: ''
                  example: sit
                engine:
                  type: string
                  description: ''
                  example: et
                gear_box:
                  type: string
                  description: ''
                  example: esse
                air_conditioner:
                  type: string
                  description: ''
                  example: a
                color:
                  type: string
                  description: ''
                  example: sint
              required:
                - user_id
                - vin_number
                - plate
                - type
                - fuel
                - make
                - model
                - engine
                - gear_box
                - air_conditioner
                - color
      security: []
  /api/garage:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/client/create:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/employee/create:
    post:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'user table. Must be at least 2 characters.'
                  example: hr
                last_name:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: o
                date_of_birth:
                  type: string
                  description: ''
                  example: voluptate
                address:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: pg
                phone_number:
                  type: string
                  description: 'Must be at least 5 characters.'
                  example: uu
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ssauer@example.org
                garage_id:
                  type: string
                  description: ''
                  example: dolor
                role:
                  type: number
                  description: "//employee table\n'salary' => 'numeric',\n//role."
                  example: 384.4024231
              required:
                - first_name
                - last_name
                - date_of_birth
                - address
                - phone_number
                - email
                - garage_id
      security: []
  '/api/employee/update/{employee_id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'user table. Must be at least 2 characters.'
                  example: oz
                last_name:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: ''
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: toy.lavern@example.net
                date_of_birth:
                  type: string
                  description: ''
                  example: et
                address:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: kr
                phone_number:
                  type: string
                  description: 'Must be at least 5 characters.'
                  example: ucmnq
                role:
                  type: number
                  description: role.
                  example: 5169.0
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
      security: []
    parameters:
      -
        in: path
        name: employee_id
        description: 'The ID of the employee.'
        example: rerum
        required: true
        schema:
          type: string
  '/api/employees/{garage_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: garage_id
        description: 'The ID of the garage.'
        example: 11
        required: true
        schema:
          type: integer
  '/api/reservations/{garage_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: garage_id
        description: 'The ID of the garage.'
        example: 1
        required: true
        schema:
          type: integer
  /api/garage/client/register:
    post:
      summary: 'POST api/client/register'
      description: 'This endpoint is used to create client. The endpoint is used for development pupposes.'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name: Luuk
                  last_name: 'van der Steen'
                  email: luckeeylssuddukss.633@gmail.com
                  date_of_birth: '2001-02-06'
                  address: 'Juan Leon Mera, 19, Av. Patria'
                  phone_number: '4 123 4567'
                  id: 14
                properties:
                  first_name:
                    type: string
                    example: Luuk
                  last_name:
                    type: string
                    example: 'van der Steen'
                  email:
                    type: string
                    example: luckeeylssuddukss.633@gmail.com
                  date_of_birth:
                    type: string
                    example: '2001-02-06'
                  address:
                    type: string
                    example: 'Juan Leon Mera, 19, Av. Patria'
                  phone_number:
                    type: string
                    example: '4 123 4567'
                  id:
                    type: integer
                    example: 14
        422:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  first_name:
                    - 'The first name field is required.'
                  last_name:
                    - 'The last name field is required.'
                  email:
                    - 'The email field is required.'
                  date_of_birth:
                    - 'The date of birth field is required.'
                  address:
                    - 'The address field is required.'
                  phone_number:
                    - 'The phone number field is required.'
                properties:
                  first_name:
                    type: array
                    example:
                      - 'The first name field is required.'
                    items:
                      type: string
                  last_name:
                    type: array
                    example:
                      - 'The last name field is required.'
                    items:
                      type: string
                  email:
                    type: array
                    example:
                      - 'The email field is required.'
                    items:
                      type: string
                  date_of_birth:
                    type: array
                    example:
                      - 'The date of birth field is required.'
                    items:
                      type: string
                  address:
                    type: array
                    example:
                      - 'The address field is required.'
                    items:
                      type: string
                  phone_number:
                    type: array
                    example:
                      - 'The phone number field is required.'
                    items:
                      type: string
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: Luuk
                last_name:
                  type: string
                  description: ''
                  example: 'van der Steen'
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gerhold.stephanie@example.org
                date_of_birth:
                  type: string
                  description: ''
                  example: '2001-02-06'
                address:
                  type: string
                  description: ''
                  example: 'Juan Leon Mera, 19, Av. Patria'
                phone_number:
                  type: string
                  description: ''
                  example: '+5514123456'
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
      security: []
  '/api/garage/client/update/{client_id}':
    put:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: doloribus
                last_name:
                  type: string
                  description: ''
                  example: est
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ervin39@example.com
                date_of_birth:
                  type: string
                  description: ''
                  example: suscipit
                address:
                  type: string
                  description: ''
                  example: quia
                phone_number:
                  type: string
                  description: ''
                  example: voluptas
              required:
                - first_name
                - last_name
                - email
                - date_of_birth
                - address
                - phone_number
      security: []
    parameters:
      -
        in: path
        name: client_id
        description: 'The ID of the client.'
        example: sunt
        required: true
        schema:
          type: string
  '/api/garage/client/cars/{client_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: client_id
        description: 'The ID of the client.'
        example: 1
        required: true
        schema:
          type: integer
  /api/garage/id:
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/client/cars:
    get:
      summary: 'Display a listing of the resource.'
      description: 'Return all the cars of the client'
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: minima
                vin_number:
                  type: string
                  description: ''
                  example: modi
                plate:
                  type: string
                  description: ''
                  example: delectus
                type:
                  type: string
                  description: ''
                  example: iusto
                fuel:
                  type: string
                  description: ''
                  example: iure
                make:
                  type: string
                  description: ''
                  example: officiis
                model:
                  type: string
                  description: ''
                  example: repellat
                engine:
                  type: string
                  description: ''
                  example: aut
                gear_box:
                  type: string
                  description: ''
                  example: nesciunt
                air_conditioner:
                  type: string
                  description: ''
                  example: amet
                color:
                  type: string
                  description: ''
                  example: itaque
              required:
                - user_id
                - vin_number
                - plate
                - type
                - fuel
                - make
                - model
                - engine
                - gear_box
                - air_conditioner
                - color
      security: []
  '/api/client/cars/{car_id}':
    put:
      summary: 'Update the specified resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: sed
                vin_number:
                  type: string
                  description: ''
                  example: qui
                plate:
                  type: string
                  description: ''
                  example: delectus
                type:
                  type: string
                  description: ''
                  example: reiciendis
                fuel:
                  type: string
                  description: ''
                  example: accusantium
                make:
                  type: string
                  description: ''
                  example: ea
                model:
                  type: string
                  description: ''
                  example: error
                engine:
                  type: string
                  description: ''
                  example: non
                gear_box:
                  type: string
                  description: ''
                  example: debitis
                air_conditioner:
                  type: string
                  description: ''
                  example: harum
                color:
                  type: string
                  description: ''
                  example: error
              required:
                - user_id
                - vin_number
                - plate
                - type
                - fuel
                - make
                - model
                - engine
                - gear_box
                - air_conditioner
                - color
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: car_id
        description: 'The ID of the car.'
        example: 14
        required: true
        schema:
          type: integer
  '/api/client/cars/{client_id}':
    get:
      summary: ''
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: client_id
        description: 'The ID of the client.'
        example: 6
        required: true
        schema:
          type: integer
tags:
  -
    name: Endpoints
    description: ''
