name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'POST api/login'
      description: |-
        This endpoint is used by all types of users to be authenticated.
        In the response, there will be a token that you need to use in every request that you make to the server.

        <aside class="notice">Use the token in every request that you make in order to be authorized to access resources.</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: example@gmail.com
        type: string
        custom: []
      password:
        name: password
        description: 'Password of the user.'
        required: true
        example: password
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
           "4|va23TB3m66Pr1W7ozSfDuRWMsHnf6fhwexyTY1Wg"
          }
        headers: []
        description: '200, success'
      -
        status: 422
        content: '{"message": "These credentials do not match out records."}'
        headers: []
        description: '422, user not found'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      title: 'POST api/logout'
      description: 'This endpoint will log out the user and destroy the token that is used.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/client/register
    metadata:
      title: 'POST api/client/register'
      description: 'This endpoint is used to create client. The endpoint is used for development pupposes.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: Luuk
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: 'van der Steen'
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: skye03@example.org
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: '2001-02-06'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: 'Juan Leon Mera, 19, Av. Patria'
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: '+5514123456'
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: dolorum
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"first_name":"Luuk","last_name":"van der Steen","email":"luckeeylssuddukss.633@gmail.com","date_of_birth":"2001-02-06","address":"Juan Leon Mera, 19, Av. Patria","phone_number":"4 123 4567","id":14}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"password":["The password field is required."]}'
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/garage/register
    metadata:
      title: 'POST api/garage/register'
      description: |-
        This endpoint will first create a user and then assign the garage to that user.
        You need to pass the client credentials and the garage in the same request.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: Luuk
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: 'van der Steen'
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: '2001-02-06'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: 'Juan Leon Mera, 19, Av. Patria'
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: distinctio
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: '+5514123456'
        type: string
        custom: []
      name:
        name: name
        description: 'Name of the garage.'
        required: true
        example: nulla
        type: string
        custom: []
      garage_address:
        name: garage_address
        description: 'Address of the garage.'
        required: true
        example: voluptatum
        type: string
        custom: []
      garage_email:
        name: garage_email
        description: 'Email of the garage.'
        required: true
        example: ducimus
        type: string
        custom: []
      garage_phone_number:
        name: garage_phone_number
        description: 'Phone number of the garage.'
        required: true
        example: iure
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"user_id":15,"name":"ut","address":"placeat","email":"hic@gmail.com","phone_number":"+3125544785","id":6}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"garage_email":["The garage_email of garage field is required."],"garage_address":["The garage_address of garage field is required."],"name":["The name of garage field is required."],"garage_phone_number":["The garage_phone_number of garage field is required."]}'
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/authenticated
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'laravel_session=wuq01pX3xcqUcN8N6KONYHDqRC8wSButAzDbZ43V; expires=Wed, 12-Jan-2022 13:37:16 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      title: 'GET api/user'
      description: 'Returns the data for the user that is authenticated.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"id":11,"first_name":"Dave","last_name":"van der Kaay","email":"amin.tahiri@ismail.nl","date_of_birth":"2021-12-18","address":"Ko\u00e7dreef 5-7\n3551GH Tilburg","phone_number":"+298159732","role":"garage_administration"}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'GET api/users'
      description: 'Returns all the clients.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"first_name":"Vaj\u00e8n","last_name":"Joosten","email":"chloe48@hoeks.nl","date_of_birth":"2021-12-25","address":"van Duvenvoirdestraat 16\n1949AN Beek","phone_number":"+316677260032"},{"id":2,"first_name":"Aaron","last_name":"van der Velden","email":"isis.peters@heinrichs.com","date_of_birth":"2021-12-21","address":"Blomring 1-p\n2685VZ Zwijndrecht","phone_number":"+8555950674310"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: api/user/update
    metadata:
      title: 'PUT api/user/update'
      description: 'Update the user that is authenticated.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: ad
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: et
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: kraig49@example.org
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: eos
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: et
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{ "message": "Updated successful" }'
        headers: []
        description: '200, success'
      -
        status: 422
        content: '{"errors":{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."]}}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/garages
    metadata:
      title: 'GET api/garages'
      description: 'Retuns all the garages.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"name":"Sten Haselaar","address":"van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk","phone_number":"+41682531929","email":"lveenstra@gmail.com"},{"name":"ut","address":"placeat","phone_number":"+3125544785","email":"hic@gmail.com"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/garages/address/{address}'
    metadata:
      title: 'GET api/garages/address/{address}'
      description: 'Search garages by address.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      address:
        name: address
        description: ''
        required: true
        example: sint
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"name":"Sten Haselaar","address":"van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk","phone_number":"+41682531929","email":"lveenstra@gmail.com"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/garages/{id}'
    metadata:
      title: 'GET api/garages/{id}'
      description: 'Search garage by ID.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the garage.'
        required: true
        example: 14
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"user_id":12,"name":"Sten Haselaar","address":"van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk","email":"lveenstra@gmail.com","phone_number":"+41682531929"}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/cars
    metadata:
      title: 'GET api/cars'
      description: 'Get all the cars in the Database.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"user_id":13,"vin_number":"5kkt4y594A38e7y7h","plate":"UZK-611","type":"small","fuel":"hybrid","make":"Ford","model":"46","engine":"4","gear_box":"automatic","air_conditioner":1,"color":"red"},{"id":2,"user_id":9,"vin_number":"6ys7t1ej1A6xhv8rc","plate":"ZFD-892","type":"hatchback","fuel":"hybrid","make":"Chrysler","model":"Kingte","engine":"Attiva","gear_box":"automatic","air_conditioner":1,"color":"red"},{"id":3,"user_id":11,"vin_number":"3l2az2zw0Ayhv6nv6","plate":"KLC-009","type":"SUV","fuel":"electric","make":"Innocenti","model":"Beast","engine":"H3","gear_box":"automatic","air_conditioner":1,"color":"red"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/cars/create
    metadata:
      title: 'POST api/cars/create'
      description: 'Adding new car as Garage Administrator'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: 8
        type: integer
        custom: []
      vin_number:
        name: vin_number
        description: ''
        required: true
        example: quo
        type: string
        custom: []
      plate:
        name: plate
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: nihil
        type: string
        custom: []
      fuel:
        name: fuel
        description: ''
        required: true
        example: facilis
        type: string
        custom: []
      make:
        name: make
        description: ''
        required: true
        example: nihil
        type: string
        custom: []
      model:
        name: model
        description: ''
        required: true
        example: eos
        type: string
        custom: []
      engine:
        name: engine
        description: ''
        required: true
        example: vel
        type: string
        custom: []
      gear_box:
        name: gear_box
        description: ''
        required: true
        example: deserunt
        type: string
        custom: []
      air_conditioner:
        name: air_conditioner
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
      color:
        name: color
        description: ''
        required: true
        example: repellendus
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"message": "Successfully created"}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"errors":{"user_id":["The user id field is required."],"vin_number":["The vin number field is required."],"plate":["The plate field is required."],"type":["The type field is required."],"fuel":["The fuel field is required."],"make":["The make field is required."],"model":["The model field is required."],"engine":["The engine field is required."],"gear_box":["The gear box field is required."],"air_conditioner":["The air conditioner field is required."],"color":["The color field is required."]}}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/garage
    metadata:
      title: 'GET api/garage'
      description: 'Returns the garages of the user that is authenticated.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"user_id":12,"name":"Sten Haselaar","address":"van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk","email":"lveenstra@gmail.com","phone_number":"+41682531929"},{"id":6,"user_id":12,"name":"ut","address":"placeat","email":"hic@gmail.com","phone_number":"+3125544785"}]'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/client/create
    metadata:
      title: 'POST api/client/create'
      description: 'Create new client as Garage Administrator'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: Luuk
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: 'van der Steen'
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: edison.collins@example.org
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: '2001-02-06'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: 'Juan Leon Mera, 19, Av. Patria'
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: '+5514123456'
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: password
        type: string
        custom: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: '200'
      -
        status: 422
        content: '{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"password":["The password field is required."]}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/employee/create
    metadata:
      title: 'POST api/employee/create'
      description: |-
        Create new employee.
        Add that employee to the garage
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'user table. Must be at least 2 characters.'
        required: true
        example: nq
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'Must be at least 2 characters.'
        required: true
        example: ''
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: reprehenderit
        type: string
        custom: []
      address:
        name: address
        description: 'Must be at least 2 characters.'
        required: true
        example: ij
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: 'Must be at least 5 characters.'
        required: true
        example: enmn
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: nick63@example.net
        type: string
        custom: []
      garage_id:
        name: garage_id
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      role:
        name: role
        description: ''
        required: false
        example: 16382905.7826
        type: number
        custom: []
    responses:
      -
        status: 200
        content: '{"message": "Successfully created"}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"errors":{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"email":["The email field is required."],"garage_id":["The garage id field is required."]}}'
        headers: []
        description: '422'
      -
        status: 403
        content: '{"Error": "Not a valid role"}'
        headers: []
        description: '403'
      -
        status: 403
        content: '{"Error": "Employee not saved"}'
        headers: []
        description: '403'
      -
        status: 403
        content: '{"Error": "Employee not saved"}'
        headers: []
        description: '403'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/employee/update/{employee_id}'
    metadata:
      title: 'PUT api/employee/update/{employee_id}'
      description: 'Edit employee employee working in the garage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      employee_id:
        name: employee_id
        description: 'The ID of the employee.'
        required: true
        example: cupiditate
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'user table. Must be at least 2 characters.'
        required: true
        example: ''
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'Must be at least 2 characters.'
        required: true
        example: sf
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: harmony.ferry@example.com
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: voluptatibus
        type: string
        custom: []
      address:
        name: address
        description: 'Must be at least 2 characters.'
        required: true
        example: ''
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: 'Must be at least 5 characters.'
        required: true
        example: ''
        type: string
        custom: []
      garage_id:
        name: garage_id
        description: ''
        required: true
        example: 6
        type: integer
        custom: []
      role:
        name: role
        description: role.
        required: false
        example: 11.50387
        type: number
        custom: []
    responses:
      -
        status: 200
        content: '{"message": "Successfully updated"}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"errors":{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"email":["The email field is required."],"garage_id":["The garage id field is required."]}}'
        headers: []
        description: '422'
      -
        status: 403
        content: '{"Error": "Not a valid role"}'
        headers: []
        description: '403'
      -
        status: 403
        content: '{"Error": "Employee not saved"}'
        headers: []
        description: '403'
      -
        status: 422
        content: '{"error: record not found":"Employee not found"}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/employees/{garage_id}'
    metadata:
      title: 'GET api/employees/{garage_id}'
      description: 'Returning all the employees in the garage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      garage_id:
        name: garage_id
        description: 'The ID of the garage.'
        required: true
        example: 9
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":6,"first_name":"Chris","last_name":"Blom","email":"jdachgeldt@vanderberg.com","phone_number":"+23671905652","date_of_birth":"2021-12-27","address":"Kriensstraat 87-u\n4401CG Kommerzijl","role":"mechanic","salary":500},{"id":7,"first_name":"Lola","last_name":"Dirksen","email":"mvanhetheerenveen@winnrich.nl","phone_number":"+600830017408","date_of_birth":"2021-12-14","address":"Moetdreef 6\n9269SZ Wekerom","role":"mechanic","salary":200},{"id":12,"first_name":"Benjamin","last_name":"Zu\u00e9rius Boxhorn van Miggrode","email":"pham.maud@vanembden.org","phone_number":"+6802172188","date_of_birth":"2021-12-24","address":"van de Walweg 94-p\n7606XL Poortvliet","role":"garage_administration","salary":200}]'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/reservations/{garage_id}'
    metadata:
      title: 'GET api/reservations/{garage_id}'
      description: 'Get all the reservation per garage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      garage_id:
        name: garage_id
        description: 'The ID of the garage.'
        required: true
        example: 13
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"user_id":3,"garage_id":1,"vin_number":"5kkt4y594A38e7y7h","description":"Accusamus dolores officia totam dolorem doloribus eaque consequatur tempora. Sunt sed magni et omnis earum deleniti. Voluptatem officia et mollitia expedita qui.","date":"1991-05-09","startingTime":"16:59:01","endingTime":"17:24:57"},{"id":2,"user_id":4,"garage_id":1,"vin_number":"1r0pu3w1XAbfn5l30","description":"Cupiditate in vel commodi rerum unde. Vel exercitationem consequatur iusto aperiam dolor maiores sunt modi. At molestiae numquam tempora vel velit ipsam iure explicabo.","date":"2013-11-26","startingTime":"23:35:23","endingTime":"18:23:15"},{"id":3,"user_id":5,"garage_id":1,"vin_number":"6ys7t1ej1A6xhv8rc","description":"Optio commodi modi itaque eius. Et non ratione est excepturi id. Iusto tempore est velit adipisci ad in.","date":"2000-04-10","startingTime":"16:20:45","endingTime":"04:34:26"},{"id":4,"user_id":2,"garage_id":1,"vin_number":"337vp16w9A7kj9jcp","description":"Tenetur voluptatem atque unde et veniam qui est tempora. Quia numquam sed dicta earum quia velit similique sint. Veritatis dolores ut quis magni quidem suscipit dolorem natus.","date":"1996-01-25","startingTime":"11:26:08","endingTime":"22:20:34"}]'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/garage/client/register
    metadata:
      title: 'POST api/client/register'
      description: 'This endpoint is used to create client. The endpoint is used for development pupposes.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: Luuk
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: 'van der Steen'
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: halvorson.taryn@example.org
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: '2001-02-06'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: 'Juan Leon Mera, 19, Av. Patria'
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: '+5514123456'
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: sed
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"first_name":"Luuk","last_name":"van der Steen","email":"luckeeylssuddukss.633@gmail.com","date_of_birth":"2001-02-06","address":"Juan Leon Mera, 19, Av. Patria","phone_number":"4 123 4567","id":14}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"password":["The password field is required."]}'
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/garage/client/update/{client_id}'
    metadata:
      title: 'PUT api/garage/client/update/{client_id}'
      description: 'Update client of the garage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: blanditiis
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: autem
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: magni
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gutmann.leland@example.org
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: debitis
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: sit
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: dignissimos
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{ "message": "Updated successful" }'
        headers: []
        description: '200, success'
      -
        status: 404
        content: '{ "message": "Not Found." }'
        headers: []
        description: '404'
      -
        status: 422
        content: '{"errors":{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."]}}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/garage/client/cars/{client_id}'
    metadata:
      title: 'GET api/garage/client/cars/{client_id}'
      description: 'Returns all the cars of the client.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":4,"user_id":3,"vin_number":"337vp16w9A7kj9jcp","plate":"IIL-805","type":"sedan","fuel":"diesel","make":"Mazda","model":"Super\u0412 Combi","engine":"PS 160","gear_box":"automatic","air_conditioner":1,"color":"red"},{"id":5,"user_id":3,"vin_number":"1r0pu3w1XAbfn5l30","plate":"RSV-723","type":"SUV","fuel":"hybrid","make":"Adler","model":"Metro","engine":"Freeclimber","gear_box":"manual","air_conditioner":1,"color":"red"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/garage/id
    metadata:
      title: 'GET api/garage/id'
      description: 'Returns the ID of the garage that you are working.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '1'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/client/cars
    metadata:
      title: 'GET api/client/cars'
      description: 'Return all the cars of the client that is authenticated'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"user_id":1,"vin_number":"5kkt4y594A38e7y7h","plate":"UZK-611","type":"small","fuel":"hybrid","make":"Ford","model":"46","engine":"4","gear_box":"automatic","air_conditioner":1,"color":"red"},{"id":2,"user_id":1,"vin_number":"6ys7t1ej1A6xhv8rc","plate":"ZFD-892","type":"hatchback","fuel":"hybrid","make":"Chrysler","model":"Kingte","engine":"Attiva","gear_box":"automatic","air_conditioner":1,"color":"red"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/client/cars
    metadata:
      title: 'POST api/client/cars'
      description: 'Client post new car in their profile.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: 8
        type: integer
        custom: []
      vin_number:
        name: vin_number
        description: ''
        required: true
        example: fugit
        type: string
        custom: []
      plate:
        name: plate
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: mollitia
        type: string
        custom: []
      fuel:
        name: fuel
        description: ''
        required: true
        example: voluptate
        type: string
        custom: []
      make:
        name: make
        description: ''
        required: true
        example: nostrum
        type: string
        custom: []
      model:
        name: model
        description: ''
        required: true
        example: eum
        type: string
        custom: []
      engine:
        name: engine
        description: ''
        required: true
        example: esse
        type: string
        custom: []
      gear_box:
        name: gear_box
        description: ''
        required: true
        example: quidem
        type: string
        custom: []
      air_conditioner:
        name: air_conditioner
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
      color:
        name: color
        description: ''
        required: true
        example: voluptates
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/client/cars/{car_id}'
    metadata:
      title: 'Update the specified resource in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      car_id:
        name: car_id
        description: 'The ID of the car.'
        required: true
        example: 20
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: sapiente
        type: string
        custom: []
      vin_number:
        name: vin_number
        description: ''
        required: true
        example: placeat
        type: string
        custom: []
      plate:
        name: plate
        description: ''
        required: true
        example: commodi
        type: string
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: quasi
        type: string
        custom: []
      fuel:
        name: fuel
        description: ''
        required: true
        example: ullam
        type: string
        custom: []
      make:
        name: make
        description: ''
        required: true
        example: eum
        type: string
        custom: []
      model:
        name: model
        description: ''
        required: true
        example: facilis
        type: string
        custom: []
      engine:
        name: engine
        description: ''
        required: true
        example: atque
        type: string
        custom: []
      gear_box:
        name: gear_box
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      air_conditioner:
        name: air_conditioner
        description: ''
        required: true
        example: molestiae
        type: string
        custom: []
      color:
        name: color
        description: ''
        required: true
        example: optio
        type: string
        custom: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/client/cars/{client_id}'
    metadata:
      title: 'GET api/garage/client/cars/{client_id}'
      description: 'Returns all the cars of the client.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: 11
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":4,"user_id":3,"vin_number":"337vp16w9A7kj9jcp","plate":"IIL-805","type":"sedan","fuel":"diesel","make":"Mazda","model":"Super\u0412 Combi","engine":"PS 160","gear_box":"automatic","air_conditioner":1,"color":"red"},{"id":5,"user_id":3,"vin_number":"1r0pu3w1XAbfn5l30","plate":"RSV-723","type":"SUV","fuel":"hybrid","make":"Adler","model":"Metro","engine":"Freeclimber","gear_box":"manual","air_conditioner":1,"color":"red"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/client/cars/{car_id}'
    metadata:
      title: 'Remove the specified resource from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      car_id:
        name: car_id
        description: 'The ID of the car.'
        required: true
        example: 14
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/reservation
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'laravel_session=eltAp4T8619phwhHFHFUjFlykguWFJZyjWogM0vN; expires=Wed, 12-Jan-2022 13:37:16 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/reservation
    metadata:
      title: 'POST api/reservation'
      description: |-
        Creating reservation on specific garage.
        This endpoint is used by Clients, Garage Manager, Admin.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: sint
        type: string
        custom: []
      garage_id:
        name: garage_id
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      vin_number:
        name: vin_number
        description: ''
        required: true
        example: est
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: enim
        type: string
        custom: []
      date:
        name: date
        description: ''
        required: true
        example: consequatur
        type: string
        custom: []
      startingTime:
        name: startingTime
        description: ''
        required: true
        example: id
        type: string
        custom: []
      endingTime:
        name: endingTime
        description: ''
        required: true
        example: culpa
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"user_id":1,"garage_id":1,"vin_number":"1r0pu3w1XAbfn5l30","description":"Optio nihil quaerat quaerat. Est sunt eos neque mollitia consectetur sit reiciendis. Accusamus et eum ad rerum.","date":"1990-07-26","startingTime":"01:21:29","endingTime":"00:21:57","id":6}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"errors":{"user_id":["The user id field is required."],"garage_id":["The garage id field is required."],"vin_number":["The vin number field is required."],"description":["The description field is required."],"date":["The date field is required."],"startingTime":["The starting time field is required."],"endingTime":["The ending time field is required."]}}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
