name: 'Garage Administrator'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/cars/create
    metadata:
      title: 'POST api/cars/create'
      description: 'Adding new car as Garage Administrator'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: 2
        type: integer
        custom: []
      vin_number:
        name: vin_number
        description: ''
        required: true
        example: id
        type: string
        custom: []
      plate:
        name: plate
        description: ''
        required: true
        example: ipsam
        type: string
        custom: []
      type:
        name: type
        description: ''
        required: true
        example: ut
        type: string
        custom: []
      fuel:
        name: fuel
        description: ''
        required: true
        example: cumque
        type: string
        custom: []
      make:
        name: make
        description: ''
        required: true
        example: vero
        type: string
        custom: []
      model:
        name: model
        description: ''
        required: true
        example: temporibus
        type: string
        custom: []
      engine:
        name: engine
        description: ''
        required: true
        example: est
        type: string
        custom: []
      gear_box:
        name: gear_box
        description: ''
        required: true
        example: dolorum
        type: string
        custom: []
      air_conditioner:
        name: air_conditioner
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
      color:
        name: color
        description: ''
        required: true
        example: dicta
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"message": "Successfully created"}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"errors":{"user_id":["The user id field is required."],"vin_number":["The vin number field is required."],"plate":["The plate field is required."],"type":["The type field is required."],"fuel":["The fuel field is required."],"make":["The make field is required."],"model":["The model field is required."],"engine":["The engine field is required."],"gear_box":["The gear box field is required."],"air_conditioner":["The air conditioner field is required."],"color":["The color field is required."]}}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/garage
    metadata:
      title: 'GET api/garage'
      description: 'Returns the garages of the user that is authenticated.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"user_id":12,"name":"Sten Haselaar","address":"van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk","email":"lveenstra@gmail.com","phone_number":"+41682531929"},{"id":6,"user_id":12,"name":"ut","address":"placeat","email":"hic@gmail.com","phone_number":"+3125544785"}]'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/client/register
    metadata:
      title: 'POST api/client/register'
      description: 'This endpoint is used to create client. The endpoint is used for development pupposes.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: Luuk
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: 'van der Steen'
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: nikolaus.antone@example.com
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: '2001-02-06'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: 'Juan Leon Mera, 19, Av. Patria'
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: '+5514123456'
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: qui
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"first_name":"Luuk","last_name":"van der Steen","email":"luckeeylssuddukss.633@gmail.com","date_of_birth":"2001-02-06","address":"Juan Leon Mera, 19, Av. Patria","phone_number":"4 123 4567","id":14}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"password":["The password field is required."]}'
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/client/create
    metadata:
      title: 'POST api/client/create'
      description: 'Create new client as Garage Administrator'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: Luuk
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: 'van der Steen'
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: easton.schaden@example.net
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: '2001-02-06'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: 'Juan Leon Mera, 19, Av. Patria'
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: '+5514123456'
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: password
        type: string
        custom: []
    responses:
      -
        status: 200
        content: ''
        headers: []
        description: '200'
      -
        status: 422
        content: '{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"password":["The password field is required."]}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/employee/create
    metadata:
      title: 'POST api/employee/create'
      description: |-
        Create new employee.
        Add that employee to the garage
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'user table. Must be at least 2 characters.'
        required: true
        example: c
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'Must be at least 2 characters.'
        required: true
        example: ''
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      address:
        name: address
        description: 'Must be at least 2 characters.'
        required: true
        example: xf
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: 'Must be at least 5 characters.'
        required: true
        example: ehowh
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: jerde.ellsworth@example.org
        type: string
        custom: []
      garage_id:
        name: garage_id
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      role:
        name: role
        description: ''
        required: false
        example: 2131.0
        type: number
        custom: []
    responses:
      -
        status: 200
        content: '{"message": "Successfully created"}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"errors":{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"email":["The email field is required."],"garage_id":["The garage id field is required."]}}'
        headers: []
        description: '422'
      -
        status: 403
        content: '{"Error": "Not a valid role"}'
        headers: []
        description: '403'
      -
        status: 403
        content: '{"Error": "Employee not saved"}'
        headers: []
        description: '403'
      -
        status: 403
        content: '{"Error": "Employee not saved"}'
        headers: []
        description: '403'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/employee/update/{employee_id}'
    metadata:
      title: 'PUT api/employee/update/{employee_id}'
      description: 'Edit employee employee working in the garage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      employee_id:
        name: employee_id
        description: 'The ID of the employee.'
        required: true
        example: ipsa
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'user table. Must be at least 2 characters.'
        required: true
        example: wy
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'Must be at least 2 characters.'
        required: true
        example: xe
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: bcrist@example.net
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: deserunt
        type: string
        custom: []
      address:
        name: address
        description: 'Must be at least 2 characters.'
        required: true
        example: x
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: 'Must be at least 5 characters.'
        required: true
        example: c
        type: string
        custom: []
      garage_id:
        name: garage_id
        description: ''
        required: true
        example: 16
        type: integer
        custom: []
      role:
        name: role
        description: role.
        required: false
        example: 1613.0
        type: number
        custom: []
    responses:
      -
        status: 200
        content: '{"message": "Successfully updated"}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"errors":{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"email":["The email field is required."],"garage_id":["The garage id field is required."]}}'
        headers: []
        description: '422'
      -
        status: 403
        content: '{"Error": "Not a valid role"}'
        headers: []
        description: '403'
      -
        status: 403
        content: '{"Error": "Employee not saved"}'
        headers: []
        description: '403'
      -
        status: 422
        content: '{"error: record not found":"Employee not found"}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/employees/{garage_id}'
    metadata:
      title: 'GET api/employees/{garage_id}'
      description: 'Returning all the employees in the garage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      garage_id:
        name: garage_id
        description: 'The ID of the garage.'
        required: true
        example: 17
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":6,"first_name":"Chris","last_name":"Blom","email":"jdachgeldt@vanderberg.com","phone_number":"+23671905652","date_of_birth":"2021-12-27","address":"Kriensstraat 87-u\n4401CG Kommerzijl","role":"mechanic","salary":500},{"id":7,"first_name":"Lola","last_name":"Dirksen","email":"mvanhetheerenveen@winnrich.nl","phone_number":"+600830017408","date_of_birth":"2021-12-14","address":"Moetdreef 6\n9269SZ Wekerom","role":"mechanic","salary":200},{"id":12,"first_name":"Benjamin","last_name":"Zu\u00e9rius Boxhorn van Miggrode","email":"pham.maud@vanembden.org","phone_number":"+6802172188","date_of_birth":"2021-12-24","address":"van de Walweg 94-p\n7606XL Poortvliet","role":"garage_administration","salary":200}]'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: api/user/update
    metadata:
      title: 'PUT api/user/update'
      description: 'Update the user that is authenticated.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: odit
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: explicabo
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: lexi31@example.org
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: quo
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: consequuntur
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{ "message": "Updated successful" }'
        headers: []
        description: '200, success'
      -
        status: 422
        content: '{"errors":{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."]}}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/reservations/{garage_id}'
    metadata:
      title: 'GET api/reservations/{garage_id}'
      description: 'Get all the reservation per garage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      garage_id:
        name: garage_id
        description: 'The ID of the garage.'
        required: true
        example: 5
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"user_id":3,"garage_id":1,"vin_number":"5kkt4y594A38e7y7h","description":"Accusamus dolores officia totam dolorem doloribus eaque consequatur tempora. Sunt sed magni et omnis earum deleniti. Voluptatem officia et mollitia expedita qui.","date":"1991-05-09","startingTime":"16:59:01","endingTime":"17:24:57"},{"id":2,"user_id":4,"garage_id":1,"vin_number":"1r0pu3w1XAbfn5l30","description":"Cupiditate in vel commodi rerum unde. Vel exercitationem consequatur iusto aperiam dolor maiores sunt modi. At molestiae numquam tempora vel velit ipsam iure explicabo.","date":"2013-11-26","startingTime":"23:35:23","endingTime":"18:23:15"},{"id":3,"user_id":5,"garage_id":1,"vin_number":"6ys7t1ej1A6xhv8rc","description":"Optio commodi modi itaque eius. Et non ratione est excepturi id. Iusto tempore est velit adipisci ad in.","date":"2000-04-10","startingTime":"16:20:45","endingTime":"04:34:26"},{"id":4,"user_id":2,"garage_id":1,"vin_number":"337vp16w9A7kj9jcp","description":"Tenetur voluptatem atque unde et veniam qui est tempora. Quia numquam sed dicta earum quia velit similique sint. Veritatis dolores ut quis magni quidem suscipit dolorem natus.","date":"1996-01-25","startingTime":"11:26:08","endingTime":"22:20:34"}]'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/garage/client/register
    metadata:
      title: 'POST api/client/register'
      description: 'This endpoint is used to create client. The endpoint is used for development pupposes.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: Luuk
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: 'van der Steen'
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: candace11@example.org
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: '2001-02-06'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: 'Juan Leon Mera, 19, Av. Patria'
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: '+5514123456'
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: velit
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"first_name":"Luuk","last_name":"van der Steen","email":"luckeeylssuddukss.633@gmail.com","date_of_birth":"2001-02-06","address":"Juan Leon Mera, 19, Av. Patria","phone_number":"4 123 4567","id":14}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"password":["The password field is required."]}'
        headers: []
        description: '422'
    responseFields: []
