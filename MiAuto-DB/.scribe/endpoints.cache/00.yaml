## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'POST api/login'
      description: |-
        This endpoint is used by all types of users to be authenticated.
        In the response, there will be a token that you need to use in every request that you make to the server.

        <aside class="notice">Use the token in every request that you make in order to be authorized to access resources.</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user.'
        required: true
        example: example@gmail.com
        type: string
        custom: []
      password:
        name: password
        description: 'Password of the user.'
        required: true
        example: password
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
           "4|va23TB3m66Pr1W7ozSfDuRWMsHnf6fhwexyTY1Wg"
          }
        headers: []
        description: '200, success'
      -
        status: 422
        content: '{"message": "These credentials do not match out records."}'
        headers: []
        description: '422, user not found'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      title: 'POST api/logout'
      description: 'This endpoint will log out the user and destroy the token that is used.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/garage/register
    metadata:
      title: 'POST api/garage/register'
      description: |-
        This endpoint will first create a user and then assign the garage to that user.
        You need to pass the client credentials and the garage in the same request.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: Luuk
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: 'van der Steen'
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: '2001-02-06'
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: 'Juan Leon Mera, 19, Av. Patria'
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: quam
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: '+5514123456'
        type: string
        custom: []
      name:
        name: name
        description: 'Name of the garage.'
        required: true
        example: minima
        type: string
        custom: []
      garage_address:
        name: garage_address
        description: 'Address of the garage.'
        required: true
        example: quas
        type: string
        custom: []
      garage_email:
        name: garage_email
        description: 'Email of the garage.'
        required: true
        example: molestiae
        type: string
        custom: []
      garage_phone_number:
        name: garage_phone_number
        description: 'Phone number of the garage.'
        required: true
        example: harum
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"user_id":15,"name":"ut","address":"placeat","email":"hic@gmail.com","phone_number":"+3125544785","id":6}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."],"garage_email":["The garage_email of garage field is required."],"garage_address":["The garage_address of garage field is required."],"name":["The name of garage field is required."],"garage_phone_number":["The garage_phone_number of garage field is required."]}'
        headers: []
        description: '422'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/authenticated
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
          set-cookie: 'laravel_session=pS9XDJ0ipzzapR5KrzTH20YMCD2YJNsRbTTF0jV6; expires=Wed, 12-Jan-2022 14:33:39 GMT; Max-Age=7200; path=/; httponly; samesite=lax'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      title: 'GET api/user'
      description: 'Returns the data for the user that is authenticated.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"id":11,"first_name":"Dave","last_name":"van der Kaay","email":"amin.tahiri@ismail.nl","date_of_birth":"2021-12-18","address":"Ko\u00e7dreef 5-7\n3551GH Tilburg","phone_number":"+298159732","role":"garage_administration"}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'GET api/users'
      description: 'Returns all the clients.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"first_name":"Vaj\u00e8n","last_name":"Joosten","email":"chloe48@hoeks.nl","date_of_birth":"2021-12-25","address":"van Duvenvoirdestraat 16\n1949AN Beek","phone_number":"+316677260032"},{"id":2,"first_name":"Aaron","last_name":"van der Velden","email":"isis.peters@heinrichs.com","date_of_birth":"2021-12-21","address":"Blomring 1-p\n2685VZ Zwijndrecht","phone_number":"+8555950674310"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/garages
    metadata:
      title: 'GET api/garages'
      description: 'Retuns all the garages.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"name":"Sten Haselaar","address":"van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk","phone_number":"+41682531929","email":"lveenstra@gmail.com"},{"name":"ut","address":"placeat","phone_number":"+3125544785","email":"hic@gmail.com"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/garages/address/{address}'
    metadata:
      title: 'GET api/garages/address/{address}'
      description: 'Search garages by address.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      address:
        name: address
        description: ''
        required: true
        example: expedita
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"name":"Sten Haselaar","address":"van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk","phone_number":"+41682531929","email":"lveenstra@gmail.com"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/garages/{id}'
    metadata:
      title: 'GET api/garages/{id}'
      description: 'Search garage by ID.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the garage.'
        required: true
        example: 14
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"id":1,"user_id":12,"name":"Sten Haselaar","address":"van Dokkumhof 3\n9801TA Westerhaar-Vriezenveensewijk","email":"lveenstra@gmail.com","phone_number":"+41682531929"}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/cars
    metadata:
      title: 'GET api/cars'
      description: 'Get all the cars in the Database.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '{"data":[{"id":1,"user_id":13,"vin_number":"5kkt4y594A38e7y7h","plate":"UZK-611","type":"small","fuel":"hybrid","make":"Ford","model":"46","engine":"4","gear_box":"automatic","air_conditioner":1,"color":"red"},{"id":2,"user_id":9,"vin_number":"6ys7t1ej1A6xhv8rc","plate":"ZFD-892","type":"hatchback","fuel":"hybrid","make":"Chrysler","model":"Kingte","engine":"Attiva","gear_box":"automatic","air_conditioner":1,"color":"red"},{"id":3,"user_id":11,"vin_number":"3l2az2zw0Ayhv6nv6","plate":"KLC-009","type":"SUV","fuel":"electric","make":"Innocenti","model":"Beast","engine":"H3","gear_box":"automatic","air_conditioner":1,"color":"red"}]}'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/garage/client/update/{client_id}'
    metadata:
      title: 'PUT api/garage/client/update/{client_id}'
      description: 'Update client of the garage.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      client_id:
        name: client_id
        description: 'The ID of the client.'
        required: true
        example: aperiam
        type: string
        custom: []
    queryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: ''
        required: true
        example: et
        type: string
        custom: []
      last_name:
        name: last_name
        description: ''
        required: true
        example: deleniti
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: etorp@example.org
        type: string
        custom: []
      date_of_birth:
        name: date_of_birth
        description: ''
        required: true
        example: sint
        type: string
        custom: []
      address:
        name: address
        description: ''
        required: true
        example: eveniet
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: ''
        required: true
        example: illo
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{ "message": "Updated successful" }'
        headers: []
        description: '200, success'
      -
        status: 404
        content: '{ "message": "Not Found." }'
        headers: []
        description: '404'
      -
        status: 422
        content: '{"errors":{"first_name":["The first name field is required."],"last_name":["The last name field is required."],"email":["The email field is required."],"date_of_birth":["The date of birth field is required."],"address":["The address field is required."],"phone_number":["The phone number field is required."]}}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/garage/id
    metadata:
      title: 'GET api/garage/id'
      description: 'Returns the ID of the garage that you are working.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '1'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/reservation
    metadata:
      title: 'GET api/reservation'
      description: 'Get all the reservation that you have made.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: '[{"id":6,"user_id":1,"garage_id":1,"vin_number":"1r0pu3w1XAbfn5l30","description":"Optio nihil quaerat quaerat. Est sunt eos neque mollitia consectetur sit reiciendis. Accusamus et eum ad rerum.","date":"1990-07-26","startingTime":"01:21:29","endingTime":"00:21:57"}]'
        headers: []
        description: '200'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/reservation
    metadata:
      title: 'POST api/reservation'
      description: |-
        Creating reservation on specific garage.
        This endpoint is used by Clients, Garage Manager, Admin.
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: et
        type: string
        custom: []
      garage_id:
        name: garage_id
        description: ''
        required: true
        example: quis
        type: string
        custom: []
      vin_number:
        name: vin_number
        description: ''
        required: true
        example: magnam
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: vitae
        type: string
        custom: []
      date:
        name: date
        description: ''
        required: true
        example: repellendus
        type: string
        custom: []
      startingTime:
        name: startingTime
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      endingTime:
        name: endingTime
        description: ''
        required: true
        example: quo
        type: string
        custom: []
    responses:
      -
        status: 200
        content: '{"user_id":1,"garage_id":1,"vin_number":"1r0pu3w1XAbfn5l30","description":"Optio nihil quaerat quaerat. Est sunt eos neque mollitia consectetur sit reiciendis. Accusamus et eum ad rerum.","date":"1990-07-26","startingTime":"01:21:29","endingTime":"00:21:57","id":6}'
        headers: []
        description: '200'
      -
        status: 422
        content: '{"errors":{"user_id":["The user id field is required."],"garage_id":["The garage id field is required."],"vin_number":["The vin number field is required."],"description":["The description field is required."],"date":["The date field is required."],"startingTime":["The starting time field is required."],"endingTime":["The ending time field is required."]}}'
        headers: []
        description: '422'
      -
        status: 401
        content: '{ "message": "Unauthenticated." }'
        headers: []
        description: '401'
    responseFields: []
